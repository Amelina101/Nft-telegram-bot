import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

BOT_TOKEN = os.getenv('BOT_TOKEN', 'your_bot_token_here')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    keyboard = [
        [InlineKeyboardButton("üéÅ –ú–∞–≥–∞–∑–∏–Ω NFT", callback_data="shop")],
        [InlineKeyboardButton("üíº –ú–æ–∏ —Å–¥–µ–ª–∫–∏", callback_data="trades")],
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if user.id == 6540509823:  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® ID
        keyboard.append([InlineKeyboardButton("üõ†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin")])
    
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —Å–¥–µ–ª–æ–∫ —Å NFT!",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    
    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
        [InlineKeyboardButton("üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ NFT", callback_data="manage_nft")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    
    await query.message.edit_text(
        "üõ†Ô∏è **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**\n\n"
        "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        "‚Ä¢ –°–¥–µ–ª–æ–∫: 1423\n"
        "‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: 5.0/5 ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"
        "üíé –ë–∞–ª–∞–Ω—Å: –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π",
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    
    if query.data == "admin":
        await admin_panel(update, context)
    elif query.data == "back":
        await start(update, context)
    else:
        await query.message.edit_text("‚öôÔ∏è –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if name == "__main__":
    main()
